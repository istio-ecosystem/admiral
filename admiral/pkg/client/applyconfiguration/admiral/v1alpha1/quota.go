/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/istio-ecosystem/admiral/admiral/pkg/apis/admiral/v1alpha1"
)

// QuotaApplyConfiguration represents an declarative configuration of the Quota type for use
// with apply.
type QuotaApplyConfiguration struct {
	Name       *string            `json:"name,omitempty"`
	TimePeriod *string            `json:"timePeriod,omitempty"`
	MaxAmount  *int               `json:"maxAmount,omitempty"`
	KeyType    *string            `json:"keyType,omitempty"`
	Algorithm  *string            `json:"algorithm,omitempty"`
	Behaviour  *string            `json:"behaviour,omitempty"`
	Rule       *string            `json:"rule,omitempty"`
	Path       *string            `json:"path,omitempty"`
	Methods    []string           `json:"methods,omitempty"`
	Headers    []*v1alpha1.Header `json:"headers,omitempty"`
}

// QuotaApplyConfiguration constructs an declarative configuration of the Quota type for use with
// apply.
func Quota() *QuotaApplyConfiguration {
	return &QuotaApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *QuotaApplyConfiguration) WithName(value string) *QuotaApplyConfiguration {
	b.Name = &value
	return b
}

// WithTimePeriod sets the TimePeriod field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TimePeriod field is set to the value of the last call.
func (b *QuotaApplyConfiguration) WithTimePeriod(value string) *QuotaApplyConfiguration {
	b.TimePeriod = &value
	return b
}

// WithMaxAmount sets the MaxAmount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxAmount field is set to the value of the last call.
func (b *QuotaApplyConfiguration) WithMaxAmount(value int) *QuotaApplyConfiguration {
	b.MaxAmount = &value
	return b
}

// WithKeyType sets the KeyType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KeyType field is set to the value of the last call.
func (b *QuotaApplyConfiguration) WithKeyType(value string) *QuotaApplyConfiguration {
	b.KeyType = &value
	return b
}

// WithAlgorithm sets the Algorithm field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Algorithm field is set to the value of the last call.
func (b *QuotaApplyConfiguration) WithAlgorithm(value string) *QuotaApplyConfiguration {
	b.Algorithm = &value
	return b
}

// WithBehaviour sets the Behaviour field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Behaviour field is set to the value of the last call.
func (b *QuotaApplyConfiguration) WithBehaviour(value string) *QuotaApplyConfiguration {
	b.Behaviour = &value
	return b
}

// WithRule sets the Rule field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Rule field is set to the value of the last call.
func (b *QuotaApplyConfiguration) WithRule(value string) *QuotaApplyConfiguration {
	b.Rule = &value
	return b
}

// WithPath sets the Path field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Path field is set to the value of the last call.
func (b *QuotaApplyConfiguration) WithPath(value string) *QuotaApplyConfiguration {
	b.Path = &value
	return b
}

// WithMethods adds the given value to the Methods field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Methods field.
func (b *QuotaApplyConfiguration) WithMethods(values ...string) *QuotaApplyConfiguration {
	for i := range values {
		b.Methods = append(b.Methods, values[i])
	}
	return b
}

// WithHeaders adds the given value to the Headers field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Headers field.
func (b *QuotaApplyConfiguration) WithHeaders(values ...**v1alpha1.Header) *QuotaApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithHeaders")
		}
		b.Headers = append(b.Headers, *values[i])
	}
	return b
}

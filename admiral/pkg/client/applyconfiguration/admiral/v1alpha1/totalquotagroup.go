/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/istio-ecosystem/admiral/admiral/pkg/apis/admiral/v1alpha1"
)

// TotalQuotaGroupApplyConfiguration represents an declarative configuration of the TotalQuotaGroup type for use
// with apply.
type TotalQuotaGroupApplyConfiguration struct {
	Name                 *string                                `json:"name,omitempty"`
	Description          *string                                `json:"description,omitempty"`
	Quotas               []*v1alpha1.Quota                      `json:"quotas,omitempty"`
	WorkloadEnvSelectors []string                               `json:"workloadEnvSelectors,omitempty"`
	RegionLevelLimit     *bool                                  `json:"regionLevelLimit,omitempty"`
	CPULimit             *int                                   `json:"cpuLimit,omitempty"`
	MemoryLimit          *int                                   `json:"memoryLimit,omitempty"`
	PodLevelThreshold    *int                                   `json:"podLevelThreshold,omitempty"`
	FailureModeBehaviour *string                                `json:"failureModeBehaviour,omitempty"`
	AdaptiveConcurrency  *AdaptiveConcurrencyApplyConfiguration `json:"adaptiveConcurrency,omitempty"`
}

// TotalQuotaGroupApplyConfiguration constructs an declarative configuration of the TotalQuotaGroup type for use with
// apply.
func TotalQuotaGroup() *TotalQuotaGroupApplyConfiguration {
	return &TotalQuotaGroupApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *TotalQuotaGroupApplyConfiguration) WithName(value string) *TotalQuotaGroupApplyConfiguration {
	b.Name = &value
	return b
}

// WithDescription sets the Description field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Description field is set to the value of the last call.
func (b *TotalQuotaGroupApplyConfiguration) WithDescription(value string) *TotalQuotaGroupApplyConfiguration {
	b.Description = &value
	return b
}

// WithQuotas adds the given value to the Quotas field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Quotas field.
func (b *TotalQuotaGroupApplyConfiguration) WithQuotas(values ...**v1alpha1.Quota) *TotalQuotaGroupApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithQuotas")
		}
		b.Quotas = append(b.Quotas, *values[i])
	}
	return b
}

// WithWorkloadEnvSelectors adds the given value to the WorkloadEnvSelectors field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the WorkloadEnvSelectors field.
func (b *TotalQuotaGroupApplyConfiguration) WithWorkloadEnvSelectors(values ...string) *TotalQuotaGroupApplyConfiguration {
	for i := range values {
		b.WorkloadEnvSelectors = append(b.WorkloadEnvSelectors, values[i])
	}
	return b
}

// WithRegionLevelLimit sets the RegionLevelLimit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RegionLevelLimit field is set to the value of the last call.
func (b *TotalQuotaGroupApplyConfiguration) WithRegionLevelLimit(value bool) *TotalQuotaGroupApplyConfiguration {
	b.RegionLevelLimit = &value
	return b
}

// WithCPULimit sets the CPULimit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CPULimit field is set to the value of the last call.
func (b *TotalQuotaGroupApplyConfiguration) WithCPULimit(value int) *TotalQuotaGroupApplyConfiguration {
	b.CPULimit = &value
	return b
}

// WithMemoryLimit sets the MemoryLimit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MemoryLimit field is set to the value of the last call.
func (b *TotalQuotaGroupApplyConfiguration) WithMemoryLimit(value int) *TotalQuotaGroupApplyConfiguration {
	b.MemoryLimit = &value
	return b
}

// WithPodLevelThreshold sets the PodLevelThreshold field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PodLevelThreshold field is set to the value of the last call.
func (b *TotalQuotaGroupApplyConfiguration) WithPodLevelThreshold(value int) *TotalQuotaGroupApplyConfiguration {
	b.PodLevelThreshold = &value
	return b
}

// WithFailureModeBehaviour sets the FailureModeBehaviour field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailureModeBehaviour field is set to the value of the last call.
func (b *TotalQuotaGroupApplyConfiguration) WithFailureModeBehaviour(value string) *TotalQuotaGroupApplyConfiguration {
	b.FailureModeBehaviour = &value
	return b
}

// WithAdaptiveConcurrency sets the AdaptiveConcurrency field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AdaptiveConcurrency field is set to the value of the last call.
func (b *TotalQuotaGroupApplyConfiguration) WithAdaptiveConcurrency(value *AdaptiveConcurrencyApplyConfiguration) *TotalQuotaGroupApplyConfiguration {
	b.AdaptiveConcurrency = value
	return b
}

version: 2.1

orbs:
  codecov: codecov/codecov@1.0.2

jobs:
  build:
    working_directory: /go/pkg/mod/github.com/admiral
    docker:
    - image: circleci/golang:1.11
    steps:
    - checkout
    - run:
        name: Setting BRANCH, TAG & SHA variables
        command: |
          echo "export TAG=$CIRCLE_TAG" >> $BASH_ENV
          echo "export BRANCH=$CIRCLE_BRANCH" >> $BASH_ENV
          echo "export SHA=$CIRCLE_SHA1" >> $BASH_ENV
          source $BASH_ENV
    - run:
        name: Build
        command: |
          make build
    - run:
        name: Tests
        command: |
          make test
          mv c.out /tmp/
    - codecov/upload:
        file: /tmp/c.out
    - setup_remote_docker
    - run:
        name: Build Docker image
        command: |
          make docker-build
    - run:
        name: Publish Docker image
        command: |
          make docker-publish
    - persist_to_workspace:
        root: .
        paths:
          - .


  run-integration-tests:
    machine:
      image: circleci/classic:201808-01
    environment:
      K8S_VERSION: v1.16.8
      KUBECONFIG: /home/circleci/.kube/config
      MINIKUBE_VERSION: v1.13.0
      MINIKUBE_WANTUPDATENOTIFICATION: false
      MINIKUBE_WANTREPORTERRORPROMPT: false
      MINIKUBE_HOME: /home/circleci
      CHANGE_MINIKUBE_NONE_USER: true
    steps:
      - attach_workspace:
          at: .
      - run:
          name: setup kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
            mkdir -p ${HOME}/.kube
            touch ${HOME}/.kube/config
      - run:
          name: setup minikube
          command: |
            curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
      - run:
          name: setup helm
          command: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get | bash
      - run:
          name: Download kustomizable
          command: |
            KUSTOMIZE_VERSION=2.1.0
            sudo chown -R $(whoami) /usr/local/bin
            curl -L -o /usr/local/bin/kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64
            chmod +x /usr/local/bin/kustomize
            kustomize version
      - run:
          name: generate prereq yaml files
          command:  |
            if [[ $CIRCLE_BRANCH == "master" ]]; then export TAG=latest; else export TAG=${CIRCLE_BRANCH}; fi
            (cd "./install/admiral/overlays/demosinglecluster" && kustomize edit set image "docker.io/admiralproj/admiral=docker.io/admiralproj/admiral:${TAG}")
            make gen-yaml
            cd tests
            export IS_LOCAL=false
      - run:
          name: Run Integration Test for Istio 1.5.7
          command:  |
            cd tests
            export IS_LOCAL=false
            ./run.sh "1.16.8" "1.5.7" "../out"
      - run:
          name: Run Integration Test for Istio 1.6.13
          command:  |
            cd tests
            export IS_LOCAL=false
            ./run.sh "1.16.8" "1.6.13" "../out"
      - run:
          name: Run Integration Test for Istio 1.7.4
          command:  |
            cd tests
            export IS_LOCAL=false
            ./run.sh "1.16.8" "1.7.4" "../out"

  publish-github-release:
    docker:
    - image: circleci/golang:1.11
    working_directory: /go/pkg/mod/github.com/admiral
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Generate output
        command: |
          make download-kustomize
          echo "export PATH=/go/pkg/mod/github.com/admiral:$PATH" >> $BASH_ENV
          source $BASH_ENV
          (cd "./install/admiral/overlays/demosinglecluster" && kustomize edit set image "docker.io/admiralproj/admiral=docker.io/admiralproj/admiral:${CIRCLE_TAG}")
          make gen-yaml
          mkdir ./artifact
          mkdir admiral-install-${CIRCLE_TAG}
          cp -R out/* admiral-install-${CIRCLE_TAG}
          tar -zcvf ./artifact/admiral-install-${CIRCLE_TAG}.tar.gz admiral-install-${CIRCLE_TAG}
    - run:
        name: Publish Release on GitHub
        command: |
          go get github.com/tcnksm/ghr
          ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./artifact/


workflows:
  version: 2
  build-and-release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - run-integration-tests:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - publish-github-release:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
